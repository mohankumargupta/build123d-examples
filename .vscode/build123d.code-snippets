{
    "b123d": {
        "scope": "python",
        "prefix": "b123d",
        "body": [
"#%%",
"",
"from build123d import *",
"from ocp_vscode import show, show_all, Camera",
"",
"with BuildPart() as builder:",
"    Box(10,10,10)",
"",
"#show(builder, reset_camera=Camera.KEEP)",
"#show(sketch1, show_sketch_local=False ,reset_camera=Camera.KEEP)",
"#show(top_face, show_parent=True)",
"show_all(reset_camera=Camera.KEEP)",
""
        ]
    },
    "svgrender": {
        "scope": "python",
        "prefix": "svgrender",
        "body": [
                "#%%",
    "",
    "from io import BytesIO",
    "from build123d import Compound, ExportSVG, LineType",
    "",
    "def write_svg(part, view_port_origin=(-100, 100, 150)):",
    "    visible, hidden = part.project_to_viewport(view_port_origin)",
    "    max_dimension = max(*Compound(children=visible + hidden).bounding_box().size)",
    "    exporter = ExportSVG(scale=100 / max_dimension)",
    "    exporter.add_layer(\"Visible\", line_weight=0.2)",
    "    exporter.add_layer(\"Hidden\", line_color=(99, 99, 99), line_type=LineType.ISO_DOT)",
    "    exporter.add_shape(visible, layer=\"Visible\")",
    "    exporter.add_shape(hidden, layer=\"Hidden\")",
    "",
    "    bytes = BytesIO()",
    "    exporter.write(bytes)",
    "    svg = bytes.getvalue().decode(\"utf-8\")",
    "    return svg",
    "",
    "",
    "from IPython.display import HTML",
    "",
    "svg_example1 = write_svg(builder.part)",
    "HTML(svg_example1)"
        ]
    }
}

